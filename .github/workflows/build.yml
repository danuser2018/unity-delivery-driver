name: Build & Deploy

on:
  workflow_dispatch: {}

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2021.2.5f1
  PROJECT_PATH: .
  TARGET_PLATFORM: WebGL

jobs:
  checklicense:
    name: check if UNITY_LICENSE is set in github secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"

  build:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Build for ${TARGET_PLATFORM} on version ${UNITY_VERSION}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v1.1.0
        with:
          path: ${PROJECT_PATH}/Library
          key: Library-${PROJECT_PATH}-${TARGET_PLATFORM}
          restore-keys: |
            Library-${PROJECT_PATH}-
            Library-
      - uses: game-ci/unity-builder@v2.0-alpha-13
        with:
          projectPath: ${PROJECT_PATH}
          unityVersion: ${UNITY_VERSION}
          targetPlatform: ${TARGET_PLATFORM}

      - uses: actions/upload-artifact@v1
        with:
          name: Build-${TARGET_PLATFORM}
          path: build/${TARGET_PLATFORM}/${TARGET_PLATFORM}
          
  deploy:
    needs: [build]
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/cache@v1.1.0
        with:
          path: ${PROJECT_PATH}/Library
          key: Library-${PROJECT_PATH}-${TARGET_PLATFORM}
          restore-keys: |
            Library-${PROJECT_PATH}-
            Library-

      - name: Download build artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: Build-${TARGET_PLATFORM}
          path: build
          
      - name: Unzip files to build folder
        working-directory: build
        run: |
            7z x ${{ steps.download.outputs.download-path }}
            
      - name: ls
        run: |
         ls -la
         cd ..
         ls -la